openapi: 3.0.3
info:
  title: Tactical RMM API
  version: 1.2.0
  description: Simple and Fast remote monitoring and management tool
paths:
  /:
    get:
      operationId: root_retrieve
      security:
      - API Key Auth: []
      - {}
      responses:
        '200':
          description: No response body
  /accounts/{id}/users/:
    get:
      operationId: accounts_users_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - accounts
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: accounts_users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - accounts
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: accounts_users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - accounts
      security:
      - API Key Auth: []
      responses:
        '204':
          description: No response body
  /accounts/apikeys/:
    get:
      operationId: accounts_apikeys_retrieve
      tags:
      - accounts
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: accounts_apikeys_create
      tags:
      - accounts
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /accounts/apikeys/{id}/:
    put:
      operationId: accounts_apikeys_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - accounts
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: accounts_apikeys_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - accounts
      security:
      - API Key Auth: []
      responses:
        '204':
          description: No response body
  /accounts/reset2fa/:
    put:
      operationId: accounts_reset2fa_update
      tags:
      - accounts
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /accounts/resetpw/:
    put:
      operationId: accounts_resetpw_update
      tags:
      - accounts
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /accounts/roles/:
    get:
      operationId: accounts_roles_retrieve
      tags:
      - accounts
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: accounts_roles_create
      tags:
      - accounts
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /accounts/roles/{id}/:
    get:
      operationId: accounts_roles_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - accounts
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: accounts_roles_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - accounts
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: accounts_roles_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - accounts
      security:
      - API Key Auth: []
      responses:
        '204':
          description: No response body
  /accounts/sessions/{id}/:
    delete:
      operationId: accounts_sessions_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - accounts
      security:
      - API Key Auth: []
      responses:
        '204':
          description: No response body
  /accounts/ssoproviders/:
    get:
      operationId: accounts_ssoproviders_retrieve
      tags:
      - accounts
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: accounts_ssoproviders_create
      tags:
      - accounts
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /accounts/ssoproviders/{id}/:
    put:
      operationId: accounts_ssoproviders_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - accounts
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: accounts_ssoproviders_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - accounts
      security:
      - API Key Auth: []
      responses:
        '204':
          description: No response body
  /accounts/ssoproviders/account/:
    delete:
      operationId: accounts_ssoproviders_account_destroy
      tags:
      - accounts
      security:
      - API Key Auth: []
      responses:
        '204':
          description: No response body
  /accounts/ssoproviders/settings/:
    get:
      operationId: accounts_ssoproviders_settings_retrieve
      tags:
      - accounts
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: accounts_ssoproviders_settings_create
      tags:
      - accounts
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /accounts/ssoproviders/token/:
    post:
      operationId: accounts_ssoproviders_token_create
      tags:
      - accounts
      responses:
        '200':
          description: No response body
  /accounts/users/:
    get:
      operationId: accounts_users_retrieve
      tags:
      - accounts
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: accounts_users_create
      tags:
      - accounts
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /accounts/users/{id}/sessions/:
    get:
      operationId: accounts_users_sessions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - accounts
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: accounts_users_sessions_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - accounts
      security:
      - API Key Auth: []
      responses:
        '204':
          description: No response body
  /accounts/users/reset/:
    post:
      operationId: accounts_users_reset_create
      tags:
      - accounts
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: accounts_users_reset_update
      tags:
      - accounts
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /accounts/users/reset_totp/:
    post:
      operationId: accounts_users_reset_totp_create
      tags:
      - accounts
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: accounts_users_reset_totp_update
      tags:
      - accounts
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /accounts/users/setup_totp/:
    post:
      operationId: accounts_users_setup_totp_create
      tags:
      - accounts
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /accounts/users/ui/:
    patch:
      operationId: accounts_users_ui_partial_update
      tags:
      - accounts
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /agents/:
    get:
      operationId: agents_retrieve
      tags:
      - agents
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /agents/{agent_id}/:
    get:
      operationId: agents_retrieve_2
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          pattern: ^[^/]{20}[^/]+$
        required: true
      tags:
      - agents
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: agents_update
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          pattern: ^[^/]{20}[^/]+$
        required: true
      tags:
      - agents
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: agents_destroy
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          pattern: ^[^/]{20}[^/]+$
        required: true
      tags:
      - agents
      security:
      - API Key Auth: []
      responses:
        '204':
          description: No response body
  /agents/{agent_id}/{port}/webvnc/:
    get:
      operationId: agents_webvnc_retrieve
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          pattern: ^[^/]{20}[^/]+$
        required: true
      - in: path
        name: port
        schema:
          type: string
        required: true
      tags:
      - agents
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /agents/{agent_id}/checks/:
    get:
      operationId: agents_checks_retrieve
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          pattern: ^[^/]{20}[^/]+$
        required: true
      tags:
      - agents
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: agents_checks_create
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          pattern: ^[^/]{20}[^/]+$
        required: true
      tags:
      - agents
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /agents/{agent_id}/cmd/:
    post:
      operationId: agents_cmd_create
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          pattern: ^[^/]{20}[^/]+$
        required: true
      tags:
      - agents
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /agents/{agent_id}/eventlog/{logtype}/{days}/:
    get:
      operationId: agents_eventlog_retrieve
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          pattern: ^[^/]{20}[^/]+$
        required: true
      - in: path
        name: days
        schema:
          type: integer
        required: true
      - in: path
        name: logtype
        schema:
          type: string
        required: true
      tags:
      - agents
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /agents/{agent_id}/history/:
    get:
      operationId: agents_history_retrieve_2
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          pattern: ^[^/]{20}[^/]+$
        required: true
      tags:
      - agents
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /agents/{agent_id}/meshcentral/:
    get:
      operationId: agents_meshcentral_retrieve
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          pattern: ^[^/]{20}[^/]+$
        required: true
      tags:
      - agents
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: agents_meshcentral_create
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          pattern: ^[^/]{20}[^/]+$
        required: true
      tags:
      - agents
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /agents/{agent_id}/meshcentral/recover/:
    get:
      operationId: agents_meshcentral_recover_retrieve
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          pattern: ^[^/]{20}[^/]+$
        required: true
      tags:
      - agents
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: agents_meshcentral_recover_create
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          pattern: ^[^/]{20}[^/]+$
        required: true
      tags:
      - agents
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /agents/{agent_id}/notes/:
    get:
      operationId: agents_notes_retrieve_3
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          pattern: ^[^/]{20}[^/]+$
        required: true
      tags:
      - agents
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: agents_notes_create_2
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          pattern: ^[^/]{20}[^/]+$
        required: true
      tags:
      - agents
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /agents/{agent_id}/pendingactions/:
    get:
      operationId: agents_pendingactions_retrieve
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          pattern: ^[^/]{20}[^/]+$
        required: true
      tags:
      - agents
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: agents_pendingactions_destroy
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          pattern: ^[^/]{20}[^/]+$
        required: true
      tags:
      - agents
      security:
      - API Key Auth: []
      responses:
        '204':
          description: No response body
  /agents/{agent_id}/ping/:
    get:
      operationId: agents_ping_retrieve
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          pattern: ^[^/]{20}[^/]+$
        required: true
      tags:
      - agents
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /agents/{agent_id}/processes/:
    get:
      operationId: agents_processes_retrieve
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          pattern: ^[^/]{20}[^/]+$
        required: true
      tags:
      - agents
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: agents_processes_destroy
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          pattern: ^[^/]{20}[^/]+$
        required: true
      tags:
      - agents
      security:
      - API Key Auth: []
      responses:
        '204':
          description: No response body
  /agents/{agent_id}/processes/{pid}/:
    get:
      operationId: agents_processes_retrieve_2
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          pattern: ^[^/]{20}[^/]+$
        required: true
      - in: path
        name: pid
        schema:
          type: integer
        required: true
      tags:
      - agents
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: agents_processes_destroy_2
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          pattern: ^[^/]{20}[^/]+$
        required: true
      - in: path
        name: pid
        schema:
          type: integer
        required: true
      tags:
      - agents
      security:
      - API Key Auth: []
      responses:
        '204':
          description: No response body
  /agents/{agent_id}/reboot/:
    post:
      operationId: agents_reboot_create
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          pattern: ^[^/]{20}[^/]+$
        required: true
      tags:
      - agents
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: agents_reboot_partial_update
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          pattern: ^[^/]{20}[^/]+$
        required: true
      tags:
      - agents
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /agents/{agent_id}/recover/:
    post:
      operationId: agents_recover_create
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          pattern: ^[^/]{20}[^/]+$
        required: true
      tags:
      - agents
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /agents/{agent_id}/runscript/:
    post:
      operationId: agents_runscript_create
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          pattern: ^[^/]{20}[^/]+$
        required: true
      tags:
      - agents
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /agents/{agent_id}/shutdown/:
    post:
      operationId: agents_shutdown_create
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          pattern: ^[^/]{20}[^/]+$
        required: true
      tags:
      - agents
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /agents/{agent_id}/tasks/:
    get:
      operationId: agents_tasks_retrieve
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          pattern: ^[^/]{20}[^/]+$
        required: true
      tags:
      - agents
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: agents_tasks_create
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          pattern: ^[^/]{20}[^/]+$
        required: true
      tags:
      - agents
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /agents/{agent_id}/wmi/:
    post:
      operationId: agents_wmi_create
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          pattern: ^[^/]{20}[^/]+$
        required: true
      tags:
      - agents
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /agents/{agent_id}/wol/:
    post:
      operationId: agents_wol_create
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          pattern: ^[^/]{20}[^/]+$
        required: true
      tags:
      - agents
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /agents/actions/bulk/:
    post:
      operationId: agents_actions_bulk_create
      tags:
      - agents
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /agents/bulkrecovery/:
    get:
      operationId: agents_bulkrecovery_retrieve
      tags:
      - agents
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /agents/history/:
    get:
      operationId: agents_history_retrieve
      tags:
      - agents
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /agents/installer/:
    post:
      operationId: agents_installer_create
      tags:
      - agents
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /agents/maintenance/bulk/:
    post:
      operationId: agents_maintenance_bulk_create
      tags:
      - agents
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /agents/notes/:
    get:
      operationId: agents_notes_retrieve
      tags:
      - agents
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: agents_notes_create
      tags:
      - agents
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /agents/notes/{id}/:
    get:
      operationId: agents_notes_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - agents
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: agents_notes_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - agents
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: agents_notes_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - agents
      security:
      - API Key Auth: []
      responses:
        '204':
          description: No response body
  /agents/scripthistory/:
    get:
      operationId: agents_scripthistory_retrieve
      tags:
      - agents
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /agents/update/:
    post:
      operationId: agents_update_create
      tags:
      - agents
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /agents/versions/:
    get:
      operationId: agents_versions_retrieve
      tags:
      - agents
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /alerts/:
    post:
      operationId: alerts_create
      tags:
      - alerts
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: alerts_partial_update
      tags:
      - alerts
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /alerts/{id}/:
    get:
      operationId: alerts_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - alerts
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: alerts_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - alerts
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: alerts_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - alerts
      security:
      - API Key Auth: []
      responses:
        '204':
          description: No response body
  /alerts/bulk/:
    post:
      operationId: alerts_bulk_create
      tags:
      - alerts
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /alerts/templates/:
    get:
      operationId: alerts_templates_retrieve
      tags:
      - alerts
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: alerts_templates_create
      tags:
      - alerts
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /alerts/templates/{id}/:
    get:
      operationId: alerts_templates_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - alerts
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: alerts_templates_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - alerts
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: alerts_templates_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - alerts
      security:
      - API Key Auth: []
      responses:
        '204':
          description: No response body
  /alerts/templates/{id}/related/:
    get:
      operationId: alerts_templates_related_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - alerts
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      tags:
      - api
      security:
      - API Key Auth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/v3/{agentid}/checkinterval/:
    get:
      operationId: api_v3_checkinterval_retrieve
      parameters:
      - in: path
        name: agentid
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/v3/{agentid}/checkrunner/:
    get:
      operationId: api_v3_checkrunner_retrieve_2
      parameters:
      - in: path
        name: agentid
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '200':
          description: No response body
    patch:
      operationId: api_v3_checkrunner_partial_update_2
      parameters:
      - in: path
        name: agentid
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/v3/{agentid}/config/:
    get:
      operationId: api_v3_config_retrieve
      parameters:
      - in: path
        name: agentid
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/v3/{agentid}/runchecks/:
    get:
      operationId: api_v3_runchecks_retrieve
      parameters:
      - in: path
        name: agentid
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/v3/{id}/{agentid}/histresult/:
    patch:
      operationId: api_v3_histresult_partial_update
      parameters:
      - in: path
        name: agentid
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/v3/{id}/{agentid}/taskrunner/:
    get:
      operationId: api_v3_taskrunner_retrieve
      parameters:
      - in: path
        name: agentid
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      responses:
        '200':
          description: No response body
    patch:
      operationId: api_v3_taskrunner_partial_update
      parameters:
      - in: path
        name: agentid
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/v3/{id}/chocoresult/:
    patch:
      operationId: api_v3_chocoresult_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/v3/checkin/:
    post:
      operationId: api_v3_checkin_create
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/v3/checkrunner/:
    get:
      operationId: api_v3_checkrunner_retrieve
      tags:
      - api
      responses:
        '200':
          description: No response body
    patch:
      operationId: api_v3_checkrunner_partial_update
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/v3/choco/:
    post:
      operationId: api_v3_choco_create
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/v3/installer/:
    get:
      operationId: api_v3_installer_retrieve
      tags:
      - api
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: api_v3_installer_create
      tags:
      - api
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /api/v3/meshexe/:
    post:
      operationId: api_v3_meshexe_create
      description: Sends the mesh exe to the installer
      tags:
      - api
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /api/v3/newagent/:
    post:
      operationId: api_v3_newagent_create
      tags:
      - api
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /api/v3/software/:
    post:
      operationId: api_v3_software_create
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/v3/superseded/:
    post:
      operationId: api_v3_superseded_create
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/v3/syncmesh/:
    post:
      operationId: api_v3_syncmesh_create
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/v3/winupdates/:
    post:
      operationId: api_v3_winupdates_create
      tags:
      - api
      responses:
        '200':
          description: No response body
    put:
      operationId: api_v3_winupdates_update
      tags:
      - api
      responses:
        '200':
          description: No response body
    patch:
      operationId: api_v3_winupdates_partial_update
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/v4/{agentid}/{id}/chocoresult/:
    patch:
      operationId: api_v4_chocoresult_partial_update
      parameters:
      - in: path
        name: agentid
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      responses:
        '200':
          description: No response body
  /automation/checks/{check}/status/:
    get:
      operationId: automation_checks_status_retrieve
      parameters:
      - in: path
        name: check
        schema:
          type: integer
        required: true
      tags:
      - automation
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /automation/patchpolicy/:
    post:
      operationId: automation_patchpolicy_create
      tags:
      - automation
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: automation_patchpolicy_update
      tags:
      - automation
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: automation_patchpolicy_destroy
      tags:
      - automation
      security:
      - API Key Auth: []
      responses:
        '204':
          description: No response body
  /automation/patchpolicy/{id}/:
    post:
      operationId: automation_patchpolicy_create_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - automation
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: automation_patchpolicy_update_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - automation
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: automation_patchpolicy_destroy_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - automation
      security:
      - API Key Auth: []
      responses:
        '204':
          description: No response body
  /automation/patchpolicy/reset/:
    post:
      operationId: automation_patchpolicy_reset_create
      tags:
      - automation
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /automation/policies/:
    get:
      operationId: automation_policies_retrieve
      tags:
      - automation
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: automation_policies_create
      tags:
      - automation
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /automation/policies/{id}/:
    get:
      operationId: automation_policies_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - automation
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: automation_policies_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - automation
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: automation_policies_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - automation
      security:
      - API Key Auth: []
      responses:
        '204':
          description: No response body
  /automation/policies/{id}/related/:
    get:
      operationId: automation_policies_related_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - automation
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /automation/policies/{policy}/checks/:
    get:
      operationId: automation_policies_checks_retrieve
      parameters:
      - in: path
        name: policy
        schema:
          type: integer
        required: true
      tags:
      - automation
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: automation_policies_checks_create
      parameters:
      - in: path
        name: policy
        schema:
          type: integer
        required: true
      tags:
      - automation
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /automation/policies/{policy}/tasks/:
    get:
      operationId: automation_policies_tasks_retrieve
      parameters:
      - in: path
        name: policy
        schema:
          type: integer
        required: true
      tags:
      - automation
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: automation_policies_tasks_create
      parameters:
      - in: path
        name: policy
        schema:
          type: integer
        required: true
      tags:
      - automation
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /automation/policies/overview/:
    get:
      operationId: automation_policies_overview_retrieve
      tags:
      - automation
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /automation/tasks/{task}/run/:
    get:
      operationId: automation_tasks_run_retrieve
      parameters:
      - in: path
        name: task
        schema:
          type: integer
        required: true
      tags:
      - automation
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: automation_tasks_run_create
      parameters:
      - in: path
        name: task
        schema:
          type: integer
        required: true
      tags:
      - automation
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /automation/tasks/{task}/status/:
    get:
      operationId: automation_tasks_status_retrieve
      parameters:
      - in: path
        name: task
        schema:
          type: integer
        required: true
      tags:
      - automation
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: automation_tasks_status_create
      parameters:
      - in: path
        name: task
        schema:
          type: integer
        required: true
      tags:
      - automation
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /beta/v1/agent/:
    get:
      operationId: beta_v1_agent_list
      parameters:
      - in: query
        name: agent_id
        schema:
          type: string
      - in: query
        name: alert_template
        schema:
          type: integer
      - in: query
        name: client_id
        schema:
          type: number
      - in: query
        name: hostname
        schema:
          type: string
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: last_logged_in_user
        schema:
          type: string
      - in: query
        name: last_seen_range_after
        schema:
          type: string
          format: date-time
      - in: query
        name: last_seen_range_before
        schema:
          type: string
          format: date-time
      - in: query
        name: logged_in_username
        schema:
          type: string
      - in: query
        name: monitoring_type
        schema:
          type: string
          enum:
          - server
          - workstation
        description: |-
          * `server` - Server
          * `workstation` - Workstation
      - in: query
        name: needs_reboot
        schema:
          type: boolean
      - in: query
        name: operating_system
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: patches_last_installed_range_after
        schema:
          type: string
          format: date-time
      - in: query
        name: patches_last_installed_range_before
        schema:
          type: string
          format: date-time
      - in: query
        name: plat
        schema:
          type: string
          enum:
          - darwin
          - linux
          - windows
        description: |-
          * `windows` - Windows
          * `linux` - Linux
          * `darwin` - macOS
      - in: query
        name: policy
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: site
        schema:
          type: integer
      - in: query
        name: total_ram_range_max
        schema:
          type: integer
      - in: query
        name: total_ram_range_min
        schema:
          type: integer
      tags:
      - beta
      security:
      - API Key Auth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedListAgentList'
          description: ''
  /beta/v1/agent/{id}/:
    get:
      operationId: beta_v1_agent_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this agent.
        required: true
      tags:
      - beta
      security:
      - API Key Auth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAgent'
          description: ''
    put:
      operationId: beta_v1_agent_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this agent.
        required: true
      tags:
      - beta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAgent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ListAgent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ListAgent'
        required: true
      security:
      - API Key Auth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAgent'
          description: ''
  /beta/v1/client/:
    get:
      operationId: beta_v1_client_list
      tags:
      - beta
      security:
      - API Key Auth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Client'
          description: ''
  /beta/v1/client/{id}/:
    get:
      operationId: beta_v1_client_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this client.
        required: true
      tags:
      - beta
      security:
      - API Key Auth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: ''
    put:
      operationId: beta_v1_client_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this client.
        required: true
      tags:
      - beta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Client'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Client'
        required: true
      security:
      - API Key Auth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: ''
  /beta/v1/site/:
    get:
      operationId: beta_v1_site_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - beta
      security:
      - API Key Auth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSiteList'
          description: ''
  /beta/v1/site/{id}/:
    get:
      operationId: beta_v1_site_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this site.
        required: true
      tags:
      - beta
      security:
      - API Key Auth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
          description: ''
    put:
      operationId: beta_v1_site_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this site.
        required: true
      tags:
      - beta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Site'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Site'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Site'
        required: true
      security:
      - API Key Auth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
          description: ''
  /checks/:
    get:
      operationId: checks_retrieve
      tags:
      - checks
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: checks_create
      tags:
      - checks
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /checks/{agent_id}/resetall/:
    post:
      operationId: checks_resetall_create
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          pattern: ^[^/]{20}[^/]+$
        required: true
      tags:
      - checks
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /checks/{agent_id}/run/:
    post:
      operationId: checks_run_create
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          pattern: ^[^/]{20}[^/]+$
        required: true
      tags:
      - checks
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /checks/{id}/:
    get:
      operationId: checks_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - checks
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: checks_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - checks
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: checks_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - checks
      security:
      - API Key Auth: []
      responses:
        '204':
          description: No response body
  /checks/{id}/history/:
    patch:
      operationId: checks_history_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - checks
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /checks/{id}/reset/:
    post:
      operationId: checks_reset_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - checks
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /checks/{target}/{id}/csbulkrun/:
    post:
      operationId: checks_csbulkrun_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: target
        schema:
          type: string
        required: true
      tags:
      - checks
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /clients/:
    get:
      operationId: clients_retrieve
      tags:
      - clients
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: clients_create
      tags:
      - clients
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /clients/{id}/:
    get:
      operationId: clients_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - clients
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: clients_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - clients
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: clients_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - clients
      security:
      - API Key Auth: []
      responses:
        '204':
          description: No response body
  /clients/{uid}/deploy/:
    get:
      operationId: clients_deploy_retrieve
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        required: true
      tags:
      - clients
      security:
      - API Key Auth: []
      - {}
      responses:
        '200':
          description: No response body
  /clients/deployments/:
    get:
      operationId: clients_deployments_retrieve
      tags:
      - clients
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: clients_deployments_create
      tags:
      - clients
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: clients_deployments_destroy
      tags:
      - clients
      security:
      - API Key Auth: []
      responses:
        '204':
          description: No response body
  /clients/deployments/{id}/:
    get:
      operationId: clients_deployments_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - clients
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: clients_deployments_create_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - clients
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: clients_deployments_destroy_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - clients
      security:
      - API Key Auth: []
      responses:
        '204':
          description: No response body
  /clients/sites/:
    get:
      operationId: clients_sites_retrieve
      tags:
      - clients
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: clients_sites_create
      tags:
      - clients
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /clients/sites/{id}/:
    get:
      operationId: clients_sites_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - clients
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: clients_sites_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - clients
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: clients_sites_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - clients
      security:
      - API Key Auth: []
      responses:
        '204':
          description: No response body
  /core/clearcache/:
    get:
      operationId: core_clearcache_retrieve
      tags:
      - core
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /core/codesign/:
    get:
      operationId: core_codesign_retrieve
      tags:
      - core
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: core_codesign_create
      tags:
      - core
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: core_codesign_partial_update
      tags:
      - core
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: core_codesign_destroy
      tags:
      - core
      security:
      - API Key Auth: []
      responses:
        '204':
          description: No response body
  /core/customfields/:
    get:
      operationId: core_customfields_retrieve
      tags:
      - core
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: core_customfields_create
      tags:
      - core
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: core_customfields_partial_update
      tags:
      - core
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /core/customfields/{id}/:
    get:
      operationId: core_customfields_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - core
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: core_customfields_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - core
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: core_customfields_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - core
      security:
      - API Key Auth: []
      responses:
        '204':
          description: No response body
  /core/dashinfo/:
    get:
      operationId: core_dashinfo_retrieve
      tags:
      - core
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /core/emailtest/:
    post:
      operationId: core_emailtest_create
      tags:
      - core
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /core/keystore/:
    get:
      operationId: core_keystore_retrieve
      tags:
      - core
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: core_keystore_create
      tags:
      - core
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /core/keystore/{id}/:
    put:
      operationId: core_keystore_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - core
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: core_keystore_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - core
      security:
      - API Key Auth: []
      responses:
        '204':
          description: No response body
  /core/openai/generate/:
    post:
      operationId: core_openai_generate_create
      tags:
      - core
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /core/servermaintenance/:
    post:
      operationId: core_servermaintenance_create
      tags:
      - core
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /core/serverscript/test/:
    post:
      operationId: core_serverscript_test_create
      tags:
      - core
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /core/settings/:
    get:
      operationId: core_settings_retrieve
      tags:
      - core
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: core_settings_update
      tags:
      - core
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /core/smstest/:
    post:
      operationId: core_smstest_create
      tags:
      - core
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /core/urlaction/:
    get:
      operationId: core_urlaction_retrieve
      tags:
      - core
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: core_urlaction_create
      tags:
      - core
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /core/urlaction/{id}/:
    put:
      operationId: core_urlaction_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - core
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: core_urlaction_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - core
      security:
      - API Key Auth: []
      responses:
        '204':
          description: No response body
  /core/urlaction/run/:
    patch:
      operationId: core_urlaction_run_partial_update
      tags:
      - core
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /core/urlaction/run/test/:
    post:
      operationId: core_urlaction_run_test_create
      tags:
      - core
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /core/version/:
    get:
      operationId: core_version_retrieve
      tags:
      - core
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /core/webtermperms/:
    post:
      operationId: core_webtermperms_create
      tags:
      - core
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /logout/:
    post:
      operationId: logout_create
      tags:
      - logout
      responses:
        '200':
          description: No response body
  /logoutall/:
    post:
      operationId: logoutall_create
      description: |-
        Log the user out of all sessions
        I.E. deletes all auth tokens for the user
      tags:
      - logoutall
      responses:
        '200':
          description: No response body
  /logs/audit/:
    patch:
      operationId: logs_audit_partial_update
      tags:
      - logs
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /logs/debug/:
    patch:
      operationId: logs_debug_partial_update
      tags:
      - logs
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /logs/pendingactions/:
    get:
      operationId: logs_pendingactions_retrieve
      tags:
      - logs
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: logs_pendingactions_destroy
      tags:
      - logs
      security:
      - API Key Auth: []
      responses:
        '204':
          description: No response body
  /logs/pendingactions/{id}/:
    get:
      operationId: logs_pendingactions_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - logs
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: logs_pendingactions_destroy_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - logs
      security:
      - API Key Auth: []
      responses:
        '204':
          description: No response body
  /reporting/assets/:
    get:
      operationId: reporting_assets_retrieve
      tags:
      - reporting
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /reporting/assets/{path}:
    get:
      operationId: reporting_assets_retrieve_2
      parameters:
      - in: path
        name: path
        schema:
          type: string
        required: true
      tags:
      - reporting
      security:
      - API Key Auth: []
      - {}
      responses:
        '200':
          description: No response body
  /reporting/assets/all/:
    get:
      operationId: reporting_assets_all_retrieve
      tags:
      - reporting
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /reporting/assets/delete/:
    post:
      operationId: reporting_assets_delete_create
      tags:
      - reporting
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /reporting/assets/download/:
    get:
      operationId: reporting_assets_download_retrieve
      tags:
      - reporting
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /reporting/assets/newfolder/:
    post:
      operationId: reporting_assets_newfolder_create
      tags:
      - reporting
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /reporting/assets/rename/:
    put:
      operationId: reporting_assets_rename_update
      tags:
      - reporting
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /reporting/assets/upload/:
    post:
      operationId: reporting_assets_upload_create
      tags:
      - reporting
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /reporting/dataqueries/:
    get:
      operationId: reporting_dataqueries_retrieve
      tags:
      - reporting
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: reporting_dataqueries_create
      tags:
      - reporting
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /reporting/dataqueries/{id}/:
    get:
      operationId: reporting_dataqueries_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - reporting
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: reporting_dataqueries_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - reporting
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: reporting_dataqueries_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - reporting
      security:
      - API Key Auth: []
      responses:
        '204':
          description: No response body
  /reporting/htmltemplates/:
    get:
      operationId: reporting_htmltemplates_retrieve
      tags:
      - reporting
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: reporting_htmltemplates_create
      tags:
      - reporting
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /reporting/htmltemplates/{id}/:
    get:
      operationId: reporting_htmltemplates_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - reporting
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: reporting_htmltemplates_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - reporting
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: reporting_htmltemplates_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - reporting
      security:
      - API Key Auth: []
      responses:
        '204':
          description: No response body
  /reporting/queryschema/:
    get:
      operationId: reporting_queryschema_retrieve
      tags:
      - reporting
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /reporting/templates/:
    get:
      operationId: reporting_templates_retrieve
      tags:
      - reporting
      security:
      - API Key Auth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportTemplate'
          description: ''
    post:
      operationId: reporting_templates_create
      tags:
      - reporting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReportTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReportTemplate'
        required: true
      security:
      - API Key Auth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportTemplate'
          description: ''
  /reporting/templates/{id}/:
    get:
      operationId: reporting_templates_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - reporting
      security:
      - API Key Auth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportTemplate'
          description: ''
    put:
      operationId: reporting_templates_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - reporting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReportTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReportTemplate'
        required: true
      security:
      - API Key Auth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportTemplate'
          description: ''
    delete:
      operationId: reporting_templates_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - reporting
      security:
      - API Key Auth: []
      responses:
        '204':
          description: No response body
  /reporting/templates/{id}/export/:
    post:
      operationId: reporting_templates_export_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - reporting
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /reporting/templates/{id}/run/:
    post:
      operationId: reporting_templates_run_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - reporting
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /reporting/templates/import/:
    post:
      operationId: reporting_templates_import_create
      tags:
      - reporting
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /reporting/templates/preview/:
    post:
      operationId: reporting_templates_preview_create
      tags:
      - reporting
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /reporting/templates/preview/analysis/:
    post:
      operationId: reporting_templates_preview_analysis_create
      tags:
      - reporting
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /reporting/templates/shared/:
    get:
      operationId: reporting_templates_shared_retrieve
      tags:
      - reporting
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: reporting_templates_shared_create
      tags:
      - reporting
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /scripts/:
    get:
      operationId: scripts_retrieve
      tags:
      - scripts
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: scripts_create
      tags:
      - scripts
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /scripts/{agent_id}/test/:
    post:
      operationId: scripts_test_create
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          pattern: ^[^/]{20}[^/]+$
        required: true
      tags:
      - scripts
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /scripts/{id}/:
    get:
      operationId: scripts_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - scripts
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: scripts_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - scripts
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: scripts_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - scripts
      security:
      - API Key Auth: []
      responses:
        '204':
          description: No response body
  /scripts/{id}/download/:
    get:
      operationId: scripts_download_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - scripts
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /scripts/snippets/:
    get:
      operationId: scripts_snippets_retrieve
      tags:
      - scripts
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: scripts_snippets_create
      tags:
      - scripts
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /scripts/snippets/{id}/:
    get:
      operationId: scripts_snippets_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - scripts
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: scripts_snippets_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - scripts
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: scripts_snippets_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - scripts
      security:
      - API Key Auth: []
      responses:
        '204':
          description: No response body
  /services/{agent_id}/:
    get:
      operationId: services_retrieve
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          pattern: ^[^/]{20}[^/]+$
        required: true
      tags:
      - services
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /services/{agent_id}/{svcname}/:
    get:
      operationId: services_retrieve_2
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          pattern: ^[^/]{20}[^/]+$
        required: true
      - in: path
        name: svcname
        schema:
          type: string
        required: true
      tags:
      - services
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: services_create
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          pattern: ^[^/]{20}[^/]+$
        required: true
      - in: path
        name: svcname
        schema:
          type: string
        required: true
      tags:
      - services
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: services_update
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          pattern: ^[^/]{20}[^/]+$
        required: true
      - in: path
        name: svcname
        schema:
          type: string
        required: true
      tags:
      - services
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /software/:
    get:
      operationId: software_retrieve
      tags:
      - software
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: software_create
      tags:
      - software
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: software_update
      tags:
      - software
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /software/{agent_id}/:
    get:
      operationId: software_retrieve_2
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          pattern: ^[^/]{20}[^/]+$
        required: true
      tags:
      - software
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: software_create_2
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          pattern: ^[^/]{20}[^/]+$
        required: true
      tags:
      - software
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: software_update_2
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          pattern: ^[^/]{20}[^/]+$
        required: true
      tags:
      - software
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /software/chocos/:
    get:
      operationId: software_chocos_retrieve
      tags:
      - software
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /tasks/:
    get:
      operationId: tasks_retrieve
      tags:
      - tasks
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: tasks_create
      tags:
      - tasks
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /tasks/{id}/:
    get:
      operationId: tasks_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - tasks
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: tasks_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - tasks
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: tasks_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - tasks
      security:
      - API Key Auth: []
      responses:
        '204':
          description: No response body
  /tasks/{id}/run/:
    post:
      operationId: tasks_run_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - tasks
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /v2/checkcreds/:
    post:
      operationId: v2_checkcreds_create
      tags:
      - v2
      security:
      - API Key Auth: []
      - {}
      responses:
        '200':
          description: No response body
  /v2/login/:
    post:
      operationId: v2_login_create
      tags:
      - v2
      security:
      - API Key Auth: []
      - {}
      responses:
        '200':
          description: No response body
  /winupdate/{agent_id}/:
    get:
      operationId: winupdate_retrieve
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          pattern: ^[^/]{20}[^/]+$
        required: true
      tags:
      - winupdate
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /winupdate/{agent_id}/install/:
    post:
      operationId: winupdate_install_create
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          pattern: ^[^/]{20}[^/]+$
        required: true
      tags:
      - winupdate
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /winupdate/{agent_id}/scan/:
    post:
      operationId: winupdate_scan_create
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          pattern: ^[^/]{20}[^/]+$
        required: true
      tags:
      - winupdate
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
  /winupdate/{id}/:
    put:
      operationId: winupdate_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - winupdate
      security:
      - API Key Auth: []
      responses:
        '200':
          description: No response body
components:
  schemas:
    BlankEnum:
      enum:
      - ''
    Client:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: string
          nullable: true
          maxLength: 255
        created_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        modified_by:
          type: string
          nullable: true
          maxLength: 255
        modified_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        name:
          type: string
          maxLength: 255
        block_policy_inheritance:
          type: boolean
        failing_checks: {}
        workstation_policy:
          type: integer
          nullable: true
        server_policy:
          type: integer
          nullable: true
        alert_template:
          type: integer
          nullable: true
      required:
      - created_time
      - id
      - modified_time
      - name
    GoarchEnum:
      enum:
      - amd64
      - '386'
      - arm64
      - arm
      type: string
      description: |-
        * `amd64` - amd64
        * `386` - 386
        * `arm64` - arm64
        * `arm` - arm
    ListAgent:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: string
          nullable: true
          maxLength: 255
        created_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        modified_by:
          type: string
          nullable: true
          maxLength: 255
        modified_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        version:
          type: string
          maxLength: 255
        operating_system:
          type: string
          nullable: true
          maxLength: 255
        plat:
          $ref: '#/components/schemas/PlatEnum'
        goarch:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/GoarchEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        hostname:
          type: string
          maxLength: 255
        agent_id:
          type: string
          maxLength: 200
        last_seen:
          type: string
          format: date-time
          nullable: true
        services:
          nullable: true
        public_ip:
          type: string
          nullable: true
          maxLength: 255
        total_ram:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        disks:
          nullable: true
        boot_time:
          type: number
          format: double
          nullable: true
        logged_in_username:
          type: string
          nullable: true
          maxLength: 255
        last_logged_in_user:
          type: string
          nullable: true
          maxLength: 255
        monitoring_type:
          $ref: '#/components/schemas/MonitoringTypeEnum'
        description:
          type: string
          nullable: true
          maxLength: 255
        mesh_node_id:
          type: string
          nullable: true
          maxLength: 255
        overdue_email_alert:
          type: boolean
        overdue_text_alert:
          type: boolean
        overdue_dashboard_alert:
          type: boolean
        offline_time:
          type: integer
          maximum: 2147483647
          minimum: 0
        overdue_time:
          type: integer
          maximum: 2147483647
          minimum: 0
        check_interval:
          type: integer
          maximum: 2147483647
          minimum: 0
        needs_reboot:
          type: boolean
        choco_installed:
          type: boolean
        wmi_detail:
          nullable: true
        patches_last_installed:
          type: string
          format: date-time
          nullable: true
        time_zone:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/TimeZoneEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        maintenance_mode:
          type: boolean
        block_policy_inheritance:
          type: boolean
        alert_template:
          type: integer
          nullable: true
        site:
          type: integer
        policy:
          type: integer
          nullable: true
      required:
      - agent_id
      - created_time
      - hostname
      - id
      - modified_time
      - site
    MonitoringTypeEnum:
      enum:
      - server
      - workstation
      type: string
      description: |-
        * `server` - Server
        * `workstation` - Workstation
    NullEnum:
      enum:
      - null
    PaginatedListAgentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ListAgent'
    PaginatedSiteList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Site'
    PlatEnum:
      enum:
      - windows
      - linux
      - darwin
      type: string
      description: |-
        * `windows` - Windows
        * `linux` - Linux
        * `darwin` - macOS
    ReportTemplate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        template_md:
          type: string
        template_css:
          type: string
          nullable: true
        type:
          $ref: '#/components/schemas/TypeEnum'
        template_variables:
          type: string
        depends_on:
          type: array
          items:
            type: string
            maxLength: 20
        template_html:
          type: integer
          nullable: true
      required:
      - id
      - name
      - template_md
    Site:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: string
          nullable: true
          maxLength: 255
        created_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        modified_by:
          type: string
          nullable: true
          maxLength: 255
        modified_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        name:
          type: string
          maxLength: 255
        block_policy_inheritance:
          type: boolean
        failing_checks: {}
        client:
          type: integer
        workstation_policy:
          type: integer
          nullable: true
        server_policy:
          type: integer
          nullable: true
        alert_template:
          type: integer
          nullable: true
      required:
      - client
      - created_time
      - id
      - modified_time
      - name
    TimeZoneEnum:
      enum:
      - Africa/Abidjan
      - Africa/Accra
      - Africa/Addis_Ababa
      - Africa/Algiers
      - Africa/Asmara
      - Africa/Asmera
      - Africa/Bamako
      - Africa/Bangui
      - Africa/Banjul
      - Africa/Bissau
      - Africa/Blantyre
      - Africa/Brazzaville
      - Africa/Bujumbura
      - Africa/Cairo
      - Africa/Casablanca
      - Africa/Ceuta
      - Africa/Conakry
      - Africa/Dakar
      - Africa/Dar_es_Salaam
      - Africa/Djibouti
      - Africa/Douala
      - Africa/El_Aaiun
      - Africa/Freetown
      - Africa/Gaborone
      - Africa/Harare
      - Africa/Johannesburg
      - Africa/Juba
      - Africa/Kampala
      - Africa/Khartoum
      - Africa/Kigali
      - Africa/Kinshasa
      - Africa/Lagos
      - Africa/Libreville
      - Africa/Lome
      - Africa/Luanda
      - Africa/Lubumbashi
      - Africa/Lusaka
      - Africa/Malabo
      - Africa/Maputo
      - Africa/Maseru
      - Africa/Mbabane
      - Africa/Mogadishu
      - Africa/Monrovia
      - Africa/Nairobi
      - Africa/Ndjamena
      - Africa/Niamey
      - Africa/Nouakchott
      - Africa/Ouagadougou
      - Africa/Porto-Novo
      - Africa/Sao_Tome
      - Africa/Timbuktu
      - Africa/Tripoli
      - Africa/Tunis
      - Africa/Windhoek
      - America/Adak
      - America/Anchorage
      - America/Anguilla
      - America/Antigua
      - America/Araguaina
      - America/Argentina/Buenos_Aires
      - America/Argentina/Catamarca
      - America/Argentina/ComodRivadavia
      - America/Argentina/Cordoba
      - America/Argentina/Jujuy
      - America/Argentina/La_Rioja
      - America/Argentina/Mendoza
      - America/Argentina/Rio_Gallegos
      - America/Argentina/Salta
      - America/Argentina/San_Juan
      - America/Argentina/San_Luis
      - America/Argentina/Tucuman
      - America/Argentina/Ushuaia
      - America/Aruba
      - America/Asuncion
      - America/Atikokan
      - America/Atka
      - America/Bahia
      - America/Bahia_Banderas
      - America/Barbados
      - America/Belem
      - America/Belize
      - America/Blanc-Sablon
      - America/Boa_Vista
      - America/Bogota
      - America/Boise
      - America/Buenos_Aires
      - America/Cambridge_Bay
      - America/Campo_Grande
      - America/Cancun
      - America/Caracas
      - America/Catamarca
      - America/Cayenne
      - America/Cayman
      - America/Chicago
      - America/Chihuahua
      - America/Ciudad_Juarez
      - America/Coral_Harbour
      - America/Cordoba
      - America/Costa_Rica
      - America/Coyhaique
      - America/Creston
      - America/Cuiaba
      - America/Curacao
      - America/Danmarkshavn
      - America/Dawson
      - America/Dawson_Creek
      - America/Denver
      - America/Detroit
      - America/Dominica
      - America/Edmonton
      - America/Eirunepe
      - America/El_Salvador
      - America/Ensenada
      - America/Fort_Nelson
      - America/Fort_Wayne
      - America/Fortaleza
      - America/Glace_Bay
      - America/Godthab
      - America/Goose_Bay
      - America/Grand_Turk
      - America/Grenada
      - America/Guadeloupe
      - America/Guatemala
      - America/Guayaquil
      - America/Guyana
      - America/Halifax
      - America/Havana
      - America/Hermosillo
      - America/Indiana/Indianapolis
      - America/Indiana/Knox
      - America/Indiana/Marengo
      - America/Indiana/Petersburg
      - America/Indiana/Tell_City
      - America/Indiana/Vevay
      - America/Indiana/Vincennes
      - America/Indiana/Winamac
      - America/Indianapolis
      - America/Inuvik
      - America/Iqaluit
      - America/Jamaica
      - America/Jujuy
      - America/Juneau
      - America/Kentucky/Louisville
      - America/Kentucky/Monticello
      - America/Knox_IN
      - America/Kralendijk
      - America/La_Paz
      - America/Lima
      - America/Los_Angeles
      - America/Louisville
      - America/Lower_Princes
      - America/Maceio
      - America/Managua
      - America/Manaus
      - America/Marigot
      - America/Martinique
      - America/Matamoros
      - America/Mazatlan
      - America/Mendoza
      - America/Menominee
      - America/Merida
      - America/Metlakatla
      - America/Mexico_City
      - America/Miquelon
      - America/Moncton
      - America/Monterrey
      - America/Montevideo
      - America/Montreal
      - America/Montserrat
      - America/Nassau
      - America/New_York
      - America/Nipigon
      - America/Nome
      - America/Noronha
      - America/North_Dakota/Beulah
      - America/North_Dakota/Center
      - America/North_Dakota/New_Salem
      - America/Nuuk
      - America/Ojinaga
      - America/Panama
      - America/Pangnirtung
      - America/Paramaribo
      - America/Phoenix
      - America/Port-au-Prince
      - America/Port_of_Spain
      - America/Porto_Acre
      - America/Porto_Velho
      - America/Puerto_Rico
      - America/Punta_Arenas
      - America/Rainy_River
      - America/Rankin_Inlet
      - America/Recife
      - America/Regina
      - America/Resolute
      - America/Rio_Branco
      - America/Rosario
      - America/Santa_Isabel
      - America/Santarem
      - America/Santiago
      - America/Santo_Domingo
      - America/Sao_Paulo
      - America/Scoresbysund
      - America/Shiprock
      - America/Sitka
      - America/St_Barthelemy
      - America/St_Johns
      - America/St_Kitts
      - America/St_Lucia
      - America/St_Thomas
      - America/St_Vincent
      - America/Swift_Current
      - America/Tegucigalpa
      - America/Thule
      - America/Thunder_Bay
      - America/Tijuana
      - America/Toronto
      - America/Tortola
      - America/Vancouver
      - America/Virgin
      - America/Whitehorse
      - America/Winnipeg
      - America/Yakutat
      - America/Yellowknife
      - Antarctica/Casey
      - Antarctica/Davis
      - Antarctica/DumontDUrville
      - Antarctica/Macquarie
      - Antarctica/Mawson
      - Antarctica/McMurdo
      - Antarctica/Palmer
      - Antarctica/Rothera
      - Antarctica/South_Pole
      - Antarctica/Syowa
      - Antarctica/Troll
      - Antarctica/Vostok
      - Arctic/Longyearbyen
      - Asia/Aden
      - Asia/Almaty
      - Asia/Amman
      - Asia/Anadyr
      - Asia/Aqtau
      - Asia/Aqtobe
      - Asia/Ashgabat
      - Asia/Ashkhabad
      - Asia/Atyrau
      - Asia/Baghdad
      - Asia/Bahrain
      - Asia/Baku
      - Asia/Bangkok
      - Asia/Barnaul
      - Asia/Beirut
      - Asia/Bishkek
      - Asia/Brunei
      - Asia/Calcutta
      - Asia/Chita
      - Asia/Choibalsan
      - Asia/Chongqing
      - Asia/Chungking
      - Asia/Colombo
      - Asia/Dacca
      - Asia/Damascus
      - Asia/Dhaka
      - Asia/Dili
      - Asia/Dubai
      - Asia/Dushanbe
      - Asia/Famagusta
      - Asia/Gaza
      - Asia/Harbin
      - Asia/Hebron
      - Asia/Ho_Chi_Minh
      - Asia/Hong_Kong
      - Asia/Hovd
      - Asia/Irkutsk
      - Asia/Istanbul
      - Asia/Jakarta
      - Asia/Jayapura
      - Asia/Jerusalem
      - Asia/Kabul
      - Asia/Kamchatka
      - Asia/Karachi
      - Asia/Kashgar
      - Asia/Kathmandu
      - Asia/Katmandu
      - Asia/Khandyga
      - Asia/Kolkata
      - Asia/Krasnoyarsk
      - Asia/Kuala_Lumpur
      - Asia/Kuching
      - Asia/Kuwait
      - Asia/Macao
      - Asia/Macau
      - Asia/Magadan
      - Asia/Makassar
      - Asia/Manila
      - Asia/Muscat
      - Asia/Nicosia
      - Asia/Novokuznetsk
      - Asia/Novosibirsk
      - Asia/Omsk
      - Asia/Oral
      - Asia/Phnom_Penh
      - Asia/Pontianak
      - Asia/Pyongyang
      - Asia/Qatar
      - Asia/Qostanay
      - Asia/Qyzylorda
      - Asia/Rangoon
      - Asia/Riyadh
      - Asia/Saigon
      - Asia/Sakhalin
      - Asia/Samarkand
      - Asia/Seoul
      - Asia/Shanghai
      - Asia/Singapore
      - Asia/Srednekolymsk
      - Asia/Taipei
      - Asia/Tashkent
      - Asia/Tbilisi
      - Asia/Tehran
      - Asia/Tel_Aviv
      - Asia/Thimbu
      - Asia/Thimphu
      - Asia/Tokyo
      - Asia/Tomsk
      - Asia/Ujung_Pandang
      - Asia/Ulaanbaatar
      - Asia/Ulan_Bator
      - Asia/Urumqi
      - Asia/Ust-Nera
      - Asia/Vientiane
      - Asia/Vladivostok
      - Asia/Yakutsk
      - Asia/Yangon
      - Asia/Yekaterinburg
      - Asia/Yerevan
      - Atlantic/Azores
      - Atlantic/Bermuda
      - Atlantic/Canary
      - Atlantic/Cape_Verde
      - Atlantic/Faeroe
      - Atlantic/Faroe
      - Atlantic/Jan_Mayen
      - Atlantic/Madeira
      - Atlantic/Reykjavik
      - Atlantic/South_Georgia
      - Atlantic/St_Helena
      - Atlantic/Stanley
      - Australia/ACT
      - Australia/Adelaide
      - Australia/Brisbane
      - Australia/Broken_Hill
      - Australia/Canberra
      - Australia/Currie
      - Australia/Darwin
      - Australia/Eucla
      - Australia/Hobart
      - Australia/LHI
      - Australia/Lindeman
      - Australia/Lord_Howe
      - Australia/Melbourne
      - Australia/NSW
      - Australia/North
      - Australia/Perth
      - Australia/Queensland
      - Australia/South
      - Australia/Sydney
      - Australia/Tasmania
      - Australia/Victoria
      - Australia/West
      - Australia/Yancowinna
      - Brazil/Acre
      - Brazil/DeNoronha
      - Brazil/East
      - Brazil/West
      - CET
      - CST6CDT
      - Canada/Atlantic
      - Canada/Central
      - Canada/Eastern
      - Canada/Mountain
      - Canada/Newfoundland
      - Canada/Pacific
      - Canada/Saskatchewan
      - Canada/Yukon
      - Chile/Continental
      - Chile/EasterIsland
      - Cuba
      - EET
      - EST
      - EST5EDT
      - Egypt
      - Eire
      - Etc/GMT
      - Etc/GMT+0
      - Etc/GMT+1
      - Etc/GMT+10
      - Etc/GMT+11
      - Etc/GMT+12
      - Etc/GMT+2
      - Etc/GMT+3
      - Etc/GMT+4
      - Etc/GMT+5
      - Etc/GMT+6
      - Etc/GMT+7
      - Etc/GMT+8
      - Etc/GMT+9
      - Etc/GMT-0
      - Etc/GMT-1
      - Etc/GMT-10
      - Etc/GMT-11
      - Etc/GMT-12
      - Etc/GMT-13
      - Etc/GMT-14
      - Etc/GMT-2
      - Etc/GMT-3
      - Etc/GMT-4
      - Etc/GMT-5
      - Etc/GMT-6
      - Etc/GMT-7
      - Etc/GMT-8
      - Etc/GMT-9
      - Etc/GMT0
      - Etc/Greenwich
      - Etc/UCT
      - Etc/UTC
      - Etc/Universal
      - Etc/Zulu
      - Europe/Amsterdam
      - Europe/Andorra
      - Europe/Astrakhan
      - Europe/Athens
      - Europe/Belfast
      - Europe/Belgrade
      - Europe/Berlin
      - Europe/Bratislava
      - Europe/Brussels
      - Europe/Bucharest
      - Europe/Budapest
      - Europe/Busingen
      - Europe/Chisinau
      - Europe/Copenhagen
      - Europe/Dublin
      - Europe/Gibraltar
      - Europe/Guernsey
      - Europe/Helsinki
      - Europe/Isle_of_Man
      - Europe/Istanbul
      - Europe/Jersey
      - Europe/Kaliningrad
      - Europe/Kiev
      - Europe/Kirov
      - Europe/Kyiv
      - Europe/Lisbon
      - Europe/Ljubljana
      - Europe/London
      - Europe/Luxembourg
      - Europe/Madrid
      - Europe/Malta
      - Europe/Mariehamn
      - Europe/Minsk
      - Europe/Monaco
      - Europe/Moscow
      - Europe/Nicosia
      - Europe/Oslo
      - Europe/Paris
      - Europe/Podgorica
      - Europe/Prague
      - Europe/Riga
      - Europe/Rome
      - Europe/Samara
      - Europe/San_Marino
      - Europe/Sarajevo
      - Europe/Saratov
      - Europe/Simferopol
      - Europe/Skopje
      - Europe/Sofia
      - Europe/Stockholm
      - Europe/Tallinn
      - Europe/Tirane
      - Europe/Tiraspol
      - Europe/Ulyanovsk
      - Europe/Uzhgorod
      - Europe/Vaduz
      - Europe/Vatican
      - Europe/Vienna
      - Europe/Vilnius
      - Europe/Volgograd
      - Europe/Warsaw
      - Europe/Zagreb
      - Europe/Zaporozhye
      - Europe/Zurich
      - Factory
      - GB
      - GB-Eire
      - GMT
      - GMT+0
      - GMT-0
      - GMT0
      - Greenwich
      - HST
      - Hongkong
      - Iceland
      - Indian/Antananarivo
      - Indian/Chagos
      - Indian/Christmas
      - Indian/Cocos
      - Indian/Comoro
      - Indian/Kerguelen
      - Indian/Mahe
      - Indian/Maldives
      - Indian/Mauritius
      - Indian/Mayotte
      - Indian/Reunion
      - Iran
      - Israel
      - Jamaica
      - Japan
      - Kwajalein
      - Libya
      - MET
      - MST
      - MST7MDT
      - Mexico/BajaNorte
      - Mexico/BajaSur
      - Mexico/General
      - NZ
      - NZ-CHAT
      - Navajo
      - PRC
      - PST8PDT
      - Pacific/Apia
      - Pacific/Auckland
      - Pacific/Bougainville
      - Pacific/Chatham
      - Pacific/Chuuk
      - Pacific/Easter
      - Pacific/Efate
      - Pacific/Enderbury
      - Pacific/Fakaofo
      - Pacific/Fiji
      - Pacific/Funafuti
      - Pacific/Galapagos
      - Pacific/Gambier
      - Pacific/Guadalcanal
      - Pacific/Guam
      - Pacific/Honolulu
      - Pacific/Johnston
      - Pacific/Kanton
      - Pacific/Kiritimati
      - Pacific/Kosrae
      - Pacific/Kwajalein
      - Pacific/Majuro
      - Pacific/Marquesas
      - Pacific/Midway
      - Pacific/Nauru
      - Pacific/Niue
      - Pacific/Norfolk
      - Pacific/Noumea
      - Pacific/Pago_Pago
      - Pacific/Palau
      - Pacific/Pitcairn
      - Pacific/Pohnpei
      - Pacific/Ponape
      - Pacific/Port_Moresby
      - Pacific/Rarotonga
      - Pacific/Saipan
      - Pacific/Samoa
      - Pacific/Tahiti
      - Pacific/Tarawa
      - Pacific/Tongatapu
      - Pacific/Truk
      - Pacific/Wake
      - Pacific/Wallis
      - Pacific/Yap
      - Poland
      - Portugal
      - ROC
      - ROK
      - Singapore
      - Turkey
      - UCT
      - US/Alaska
      - US/Aleutian
      - US/Arizona
      - US/Central
      - US/East-Indiana
      - US/Eastern
      - US/Hawaii
      - US/Indiana-Starke
      - US/Michigan
      - US/Mountain
      - US/Pacific
      - US/Samoa
      - UTC
      - Universal
      - W-SU
      - WET
      - Zulu
      - localtime
      type: string
      description: |-
        * `Africa/Abidjan` - Africa/Abidjan
        * `Africa/Accra` - Africa/Accra
        * `Africa/Addis_Ababa` - Africa/Addis_Ababa
        * `Africa/Algiers` - Africa/Algiers
        * `Africa/Asmara` - Africa/Asmara
        * `Africa/Asmera` - Africa/Asmera
        * `Africa/Bamako` - Africa/Bamako
        * `Africa/Bangui` - Africa/Bangui
        * `Africa/Banjul` - Africa/Banjul
        * `Africa/Bissau` - Africa/Bissau
        * `Africa/Blantyre` - Africa/Blantyre
        * `Africa/Brazzaville` - Africa/Brazzaville
        * `Africa/Bujumbura` - Africa/Bujumbura
        * `Africa/Cairo` - Africa/Cairo
        * `Africa/Casablanca` - Africa/Casablanca
        * `Africa/Ceuta` - Africa/Ceuta
        * `Africa/Conakry` - Africa/Conakry
        * `Africa/Dakar` - Africa/Dakar
        * `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam
        * `Africa/Djibouti` - Africa/Djibouti
        * `Africa/Douala` - Africa/Douala
        * `Africa/El_Aaiun` - Africa/El_Aaiun
        * `Africa/Freetown` - Africa/Freetown
        * `Africa/Gaborone` - Africa/Gaborone
        * `Africa/Harare` - Africa/Harare
        * `Africa/Johannesburg` - Africa/Johannesburg
        * `Africa/Juba` - Africa/Juba
        * `Africa/Kampala` - Africa/Kampala
        * `Africa/Khartoum` - Africa/Khartoum
        * `Africa/Kigali` - Africa/Kigali
        * `Africa/Kinshasa` - Africa/Kinshasa
        * `Africa/Lagos` - Africa/Lagos
        * `Africa/Libreville` - Africa/Libreville
        * `Africa/Lome` - Africa/Lome
        * `Africa/Luanda` - Africa/Luanda
        * `Africa/Lubumbashi` - Africa/Lubumbashi
        * `Africa/Lusaka` - Africa/Lusaka
        * `Africa/Malabo` - Africa/Malabo
        * `Africa/Maputo` - Africa/Maputo
        * `Africa/Maseru` - Africa/Maseru
        * `Africa/Mbabane` - Africa/Mbabane
        * `Africa/Mogadishu` - Africa/Mogadishu
        * `Africa/Monrovia` - Africa/Monrovia
        * `Africa/Nairobi` - Africa/Nairobi
        * `Africa/Ndjamena` - Africa/Ndjamena
        * `Africa/Niamey` - Africa/Niamey
        * `Africa/Nouakchott` - Africa/Nouakchott
        * `Africa/Ouagadougou` - Africa/Ouagadougou
        * `Africa/Porto-Novo` - Africa/Porto-Novo
        * `Africa/Sao_Tome` - Africa/Sao_Tome
        * `Africa/Timbuktu` - Africa/Timbuktu
        * `Africa/Tripoli` - Africa/Tripoli
        * `Africa/Tunis` - Africa/Tunis
        * `Africa/Windhoek` - Africa/Windhoek
        * `America/Adak` - America/Adak
        * `America/Anchorage` - America/Anchorage
        * `America/Anguilla` - America/Anguilla
        * `America/Antigua` - America/Antigua
        * `America/Araguaina` - America/Araguaina
        * `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires
        * `America/Argentina/Catamarca` - America/Argentina/Catamarca
        * `America/Argentina/ComodRivadavia` - America/Argentina/ComodRivadavia
        * `America/Argentina/Cordoba` - America/Argentina/Cordoba
        * `America/Argentina/Jujuy` - America/Argentina/Jujuy
        * `America/Argentina/La_Rioja` - America/Argentina/La_Rioja
        * `America/Argentina/Mendoza` - America/Argentina/Mendoza
        * `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos
        * `America/Argentina/Salta` - America/Argentina/Salta
        * `America/Argentina/San_Juan` - America/Argentina/San_Juan
        * `America/Argentina/San_Luis` - America/Argentina/San_Luis
        * `America/Argentina/Tucuman` - America/Argentina/Tucuman
        * `America/Argentina/Ushuaia` - America/Argentina/Ushuaia
        * `America/Aruba` - America/Aruba
        * `America/Asuncion` - America/Asuncion
        * `America/Atikokan` - America/Atikokan
        * `America/Atka` - America/Atka
        * `America/Bahia` - America/Bahia
        * `America/Bahia_Banderas` - America/Bahia_Banderas
        * `America/Barbados` - America/Barbados
        * `America/Belem` - America/Belem
        * `America/Belize` - America/Belize
        * `America/Blanc-Sablon` - America/Blanc-Sablon
        * `America/Boa_Vista` - America/Boa_Vista
        * `America/Bogota` - America/Bogota
        * `America/Boise` - America/Boise
        * `America/Buenos_Aires` - America/Buenos_Aires
        * `America/Cambridge_Bay` - America/Cambridge_Bay
        * `America/Campo_Grande` - America/Campo_Grande
        * `America/Cancun` - America/Cancun
        * `America/Caracas` - America/Caracas
        * `America/Catamarca` - America/Catamarca
        * `America/Cayenne` - America/Cayenne
        * `America/Cayman` - America/Cayman
        * `America/Chicago` - America/Chicago
        * `America/Chihuahua` - America/Chihuahua
        * `America/Ciudad_Juarez` - America/Ciudad_Juarez
        * `America/Coral_Harbour` - America/Coral_Harbour
        * `America/Cordoba` - America/Cordoba
        * `America/Costa_Rica` - America/Costa_Rica
        * `America/Coyhaique` - America/Coyhaique
        * `America/Creston` - America/Creston
        * `America/Cuiaba` - America/Cuiaba
        * `America/Curacao` - America/Curacao
        * `America/Danmarkshavn` - America/Danmarkshavn
        * `America/Dawson` - America/Dawson
        * `America/Dawson_Creek` - America/Dawson_Creek
        * `America/Denver` - America/Denver
        * `America/Detroit` - America/Detroit
        * `America/Dominica` - America/Dominica
        * `America/Edmonton` - America/Edmonton
        * `America/Eirunepe` - America/Eirunepe
        * `America/El_Salvador` - America/El_Salvador
        * `America/Ensenada` - America/Ensenada
        * `America/Fort_Nelson` - America/Fort_Nelson
        * `America/Fort_Wayne` - America/Fort_Wayne
        * `America/Fortaleza` - America/Fortaleza
        * `America/Glace_Bay` - America/Glace_Bay
        * `America/Godthab` - America/Godthab
        * `America/Goose_Bay` - America/Goose_Bay
        * `America/Grand_Turk` - America/Grand_Turk
        * `America/Grenada` - America/Grenada
        * `America/Guadeloupe` - America/Guadeloupe
        * `America/Guatemala` - America/Guatemala
        * `America/Guayaquil` - America/Guayaquil
        * `America/Guyana` - America/Guyana
        * `America/Halifax` - America/Halifax
        * `America/Havana` - America/Havana
        * `America/Hermosillo` - America/Hermosillo
        * `America/Indiana/Indianapolis` - America/Indiana/Indianapolis
        * `America/Indiana/Knox` - America/Indiana/Knox
        * `America/Indiana/Marengo` - America/Indiana/Marengo
        * `America/Indiana/Petersburg` - America/Indiana/Petersburg
        * `America/Indiana/Tell_City` - America/Indiana/Tell_City
        * `America/Indiana/Vevay` - America/Indiana/Vevay
        * `America/Indiana/Vincennes` - America/Indiana/Vincennes
        * `America/Indiana/Winamac` - America/Indiana/Winamac
        * `America/Indianapolis` - America/Indianapolis
        * `America/Inuvik` - America/Inuvik
        * `America/Iqaluit` - America/Iqaluit
        * `America/Jamaica` - America/Jamaica
        * `America/Jujuy` - America/Jujuy
        * `America/Juneau` - America/Juneau
        * `America/Kentucky/Louisville` - America/Kentucky/Louisville
        * `America/Kentucky/Monticello` - America/Kentucky/Monticello
        * `America/Knox_IN` - America/Knox_IN
        * `America/Kralendijk` - America/Kralendijk
        * `America/La_Paz` - America/La_Paz
        * `America/Lima` - America/Lima
        * `America/Los_Angeles` - America/Los_Angeles
        * `America/Louisville` - America/Louisville
        * `America/Lower_Princes` - America/Lower_Princes
        * `America/Maceio` - America/Maceio
        * `America/Managua` - America/Managua
        * `America/Manaus` - America/Manaus
        * `America/Marigot` - America/Marigot
        * `America/Martinique` - America/Martinique
        * `America/Matamoros` - America/Matamoros
        * `America/Mazatlan` - America/Mazatlan
        * `America/Mendoza` - America/Mendoza
        * `America/Menominee` - America/Menominee
        * `America/Merida` - America/Merida
        * `America/Metlakatla` - America/Metlakatla
        * `America/Mexico_City` - America/Mexico_City
        * `America/Miquelon` - America/Miquelon
        * `America/Moncton` - America/Moncton
        * `America/Monterrey` - America/Monterrey
        * `America/Montevideo` - America/Montevideo
        * `America/Montreal` - America/Montreal
        * `America/Montserrat` - America/Montserrat
        * `America/Nassau` - America/Nassau
        * `America/New_York` - America/New_York
        * `America/Nipigon` - America/Nipigon
        * `America/Nome` - America/Nome
        * `America/Noronha` - America/Noronha
        * `America/North_Dakota/Beulah` - America/North_Dakota/Beulah
        * `America/North_Dakota/Center` - America/North_Dakota/Center
        * `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem
        * `America/Nuuk` - America/Nuuk
        * `America/Ojinaga` - America/Ojinaga
        * `America/Panama` - America/Panama
        * `America/Pangnirtung` - America/Pangnirtung
        * `America/Paramaribo` - America/Paramaribo
        * `America/Phoenix` - America/Phoenix
        * `America/Port-au-Prince` - America/Port-au-Prince
        * `America/Port_of_Spain` - America/Port_of_Spain
        * `America/Porto_Acre` - America/Porto_Acre
        * `America/Porto_Velho` - America/Porto_Velho
        * `America/Puerto_Rico` - America/Puerto_Rico
        * `America/Punta_Arenas` - America/Punta_Arenas
        * `America/Rainy_River` - America/Rainy_River
        * `America/Rankin_Inlet` - America/Rankin_Inlet
        * `America/Recife` - America/Recife
        * `America/Regina` - America/Regina
        * `America/Resolute` - America/Resolute
        * `America/Rio_Branco` - America/Rio_Branco
        * `America/Rosario` - America/Rosario
        * `America/Santa_Isabel` - America/Santa_Isabel
        * `America/Santarem` - America/Santarem
        * `America/Santiago` - America/Santiago
        * `America/Santo_Domingo` - America/Santo_Domingo
        * `America/Sao_Paulo` - America/Sao_Paulo
        * `America/Scoresbysund` - America/Scoresbysund
        * `America/Shiprock` - America/Shiprock
        * `America/Sitka` - America/Sitka
        * `America/St_Barthelemy` - America/St_Barthelemy
        * `America/St_Johns` - America/St_Johns
        * `America/St_Kitts` - America/St_Kitts
        * `America/St_Lucia` - America/St_Lucia
        * `America/St_Thomas` - America/St_Thomas
        * `America/St_Vincent` - America/St_Vincent
        * `America/Swift_Current` - America/Swift_Current
        * `America/Tegucigalpa` - America/Tegucigalpa
        * `America/Thule` - America/Thule
        * `America/Thunder_Bay` - America/Thunder_Bay
        * `America/Tijuana` - America/Tijuana
        * `America/Toronto` - America/Toronto
        * `America/Tortola` - America/Tortola
        * `America/Vancouver` - America/Vancouver
        * `America/Virgin` - America/Virgin
        * `America/Whitehorse` - America/Whitehorse
        * `America/Winnipeg` - America/Winnipeg
        * `America/Yakutat` - America/Yakutat
        * `America/Yellowknife` - America/Yellowknife
        * `Antarctica/Casey` - Antarctica/Casey
        * `Antarctica/Davis` - Antarctica/Davis
        * `Antarctica/DumontDUrville` - Antarctica/DumontDUrville
        * `Antarctica/Macquarie` - Antarctica/Macquarie
        * `Antarctica/Mawson` - Antarctica/Mawson
        * `Antarctica/McMurdo` - Antarctica/McMurdo
        * `Antarctica/Palmer` - Antarctica/Palmer
        * `Antarctica/Rothera` - Antarctica/Rothera
        * `Antarctica/South_Pole` - Antarctica/South_Pole
        * `Antarctica/Syowa` - Antarctica/Syowa
        * `Antarctica/Troll` - Antarctica/Troll
        * `Antarctica/Vostok` - Antarctica/Vostok
        * `Arctic/Longyearbyen` - Arctic/Longyearbyen
        * `Asia/Aden` - Asia/Aden
        * `Asia/Almaty` - Asia/Almaty
        * `Asia/Amman` - Asia/Amman
        * `Asia/Anadyr` - Asia/Anadyr
        * `Asia/Aqtau` - Asia/Aqtau
        * `Asia/Aqtobe` - Asia/Aqtobe
        * `Asia/Ashgabat` - Asia/Ashgabat
        * `Asia/Ashkhabad` - Asia/Ashkhabad
        * `Asia/Atyrau` - Asia/Atyrau
        * `Asia/Baghdad` - Asia/Baghdad
        * `Asia/Bahrain` - Asia/Bahrain
        * `Asia/Baku` - Asia/Baku
        * `Asia/Bangkok` - Asia/Bangkok
        * `Asia/Barnaul` - Asia/Barnaul
        * `Asia/Beirut` - Asia/Beirut
        * `Asia/Bishkek` - Asia/Bishkek
        * `Asia/Brunei` - Asia/Brunei
        * `Asia/Calcutta` - Asia/Calcutta
        * `Asia/Chita` - Asia/Chita
        * `Asia/Choibalsan` - Asia/Choibalsan
        * `Asia/Chongqing` - Asia/Chongqing
        * `Asia/Chungking` - Asia/Chungking
        * `Asia/Colombo` - Asia/Colombo
        * `Asia/Dacca` - Asia/Dacca
        * `Asia/Damascus` - Asia/Damascus
        * `Asia/Dhaka` - Asia/Dhaka
        * `Asia/Dili` - Asia/Dili
        * `Asia/Dubai` - Asia/Dubai
        * `Asia/Dushanbe` - Asia/Dushanbe
        * `Asia/Famagusta` - Asia/Famagusta
        * `Asia/Gaza` - Asia/Gaza
        * `Asia/Harbin` - Asia/Harbin
        * `Asia/Hebron` - Asia/Hebron
        * `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh
        * `Asia/Hong_Kong` - Asia/Hong_Kong
        * `Asia/Hovd` - Asia/Hovd
        * `Asia/Irkutsk` - Asia/Irkutsk
        * `Asia/Istanbul` - Asia/Istanbul
        * `Asia/Jakarta` - Asia/Jakarta
        * `Asia/Jayapura` - Asia/Jayapura
        * `Asia/Jerusalem` - Asia/Jerusalem
        * `Asia/Kabul` - Asia/Kabul
        * `Asia/Kamchatka` - Asia/Kamchatka
        * `Asia/Karachi` - Asia/Karachi
        * `Asia/Kashgar` - Asia/Kashgar
        * `Asia/Kathmandu` - Asia/Kathmandu
        * `Asia/Katmandu` - Asia/Katmandu
        * `Asia/Khandyga` - Asia/Khandyga
        * `Asia/Kolkata` - Asia/Kolkata
        * `Asia/Krasnoyarsk` - Asia/Krasnoyarsk
        * `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur
        * `Asia/Kuching` - Asia/Kuching
        * `Asia/Kuwait` - Asia/Kuwait
        * `Asia/Macao` - Asia/Macao
        * `Asia/Macau` - Asia/Macau
        * `Asia/Magadan` - Asia/Magadan
        * `Asia/Makassar` - Asia/Makassar
        * `Asia/Manila` - Asia/Manila
        * `Asia/Muscat` - Asia/Muscat
        * `Asia/Nicosia` - Asia/Nicosia
        * `Asia/Novokuznetsk` - Asia/Novokuznetsk
        * `Asia/Novosibirsk` - Asia/Novosibirsk
        * `Asia/Omsk` - Asia/Omsk
        * `Asia/Oral` - Asia/Oral
        * `Asia/Phnom_Penh` - Asia/Phnom_Penh
        * `Asia/Pontianak` - Asia/Pontianak
        * `Asia/Pyongyang` - Asia/Pyongyang
        * `Asia/Qatar` - Asia/Qatar
        * `Asia/Qostanay` - Asia/Qostanay
        * `Asia/Qyzylorda` - Asia/Qyzylorda
        * `Asia/Rangoon` - Asia/Rangoon
        * `Asia/Riyadh` - Asia/Riyadh
        * `Asia/Saigon` - Asia/Saigon
        * `Asia/Sakhalin` - Asia/Sakhalin
        * `Asia/Samarkand` - Asia/Samarkand
        * `Asia/Seoul` - Asia/Seoul
        * `Asia/Shanghai` - Asia/Shanghai
        * `Asia/Singapore` - Asia/Singapore
        * `Asia/Srednekolymsk` - Asia/Srednekolymsk
        * `Asia/Taipei` - Asia/Taipei
        * `Asia/Tashkent` - Asia/Tashkent
        * `Asia/Tbilisi` - Asia/Tbilisi
        * `Asia/Tehran` - Asia/Tehran
        * `Asia/Tel_Aviv` - Asia/Tel_Aviv
        * `Asia/Thimbu` - Asia/Thimbu
        * `Asia/Thimphu` - Asia/Thimphu
        * `Asia/Tokyo` - Asia/Tokyo
        * `Asia/Tomsk` - Asia/Tomsk
        * `Asia/Ujung_Pandang` - Asia/Ujung_Pandang
        * `Asia/Ulaanbaatar` - Asia/Ulaanbaatar
        * `Asia/Ulan_Bator` - Asia/Ulan_Bator
        * `Asia/Urumqi` - Asia/Urumqi
        * `Asia/Ust-Nera` - Asia/Ust-Nera
        * `Asia/Vientiane` - Asia/Vientiane
        * `Asia/Vladivostok` - Asia/Vladivostok
        * `Asia/Yakutsk` - Asia/Yakutsk
        * `Asia/Yangon` - Asia/Yangon
        * `Asia/Yekaterinburg` - Asia/Yekaterinburg
        * `Asia/Yerevan` - Asia/Yerevan
        * `Atlantic/Azores` - Atlantic/Azores
        * `Atlantic/Bermuda` - Atlantic/Bermuda
        * `Atlantic/Canary` - Atlantic/Canary
        * `Atlantic/Cape_Verde` - Atlantic/Cape_Verde
        * `Atlantic/Faeroe` - Atlantic/Faeroe
        * `Atlantic/Faroe` - Atlantic/Faroe
        * `Atlantic/Jan_Mayen` - Atlantic/Jan_Mayen
        * `Atlantic/Madeira` - Atlantic/Madeira
        * `Atlantic/Reykjavik` - Atlantic/Reykjavik
        * `Atlantic/South_Georgia` - Atlantic/South_Georgia
        * `Atlantic/St_Helena` - Atlantic/St_Helena
        * `Atlantic/Stanley` - Atlantic/Stanley
        * `Australia/ACT` - Australia/ACT
        * `Australia/Adelaide` - Australia/Adelaide
        * `Australia/Brisbane` - Australia/Brisbane
        * `Australia/Broken_Hill` - Australia/Broken_Hill
        * `Australia/Canberra` - Australia/Canberra
        * `Australia/Currie` - Australia/Currie
        * `Australia/Darwin` - Australia/Darwin
        * `Australia/Eucla` - Australia/Eucla
        * `Australia/Hobart` - Australia/Hobart
        * `Australia/LHI` - Australia/LHI
        * `Australia/Lindeman` - Australia/Lindeman
        * `Australia/Lord_Howe` - Australia/Lord_Howe
        * `Australia/Melbourne` - Australia/Melbourne
        * `Australia/NSW` - Australia/NSW
        * `Australia/North` - Australia/North
        * `Australia/Perth` - Australia/Perth
        * `Australia/Queensland` - Australia/Queensland
        * `Australia/South` - Australia/South
        * `Australia/Sydney` - Australia/Sydney
        * `Australia/Tasmania` - Australia/Tasmania
        * `Australia/Victoria` - Australia/Victoria
        * `Australia/West` - Australia/West
        * `Australia/Yancowinna` - Australia/Yancowinna
        * `Brazil/Acre` - Brazil/Acre
        * `Brazil/DeNoronha` - Brazil/DeNoronha
        * `Brazil/East` - Brazil/East
        * `Brazil/West` - Brazil/West
        * `CET` - CET
        * `CST6CDT` - CST6CDT
        * `Canada/Atlantic` - Canada/Atlantic
        * `Canada/Central` - Canada/Central
        * `Canada/Eastern` - Canada/Eastern
        * `Canada/Mountain` - Canada/Mountain
        * `Canada/Newfoundland` - Canada/Newfoundland
        * `Canada/Pacific` - Canada/Pacific
        * `Canada/Saskatchewan` - Canada/Saskatchewan
        * `Canada/Yukon` - Canada/Yukon
        * `Chile/Continental` - Chile/Continental
        * `Chile/EasterIsland` - Chile/EasterIsland
        * `Cuba` - Cuba
        * `EET` - EET
        * `EST` - EST
        * `EST5EDT` - EST5EDT
        * `Egypt` - Egypt
        * `Eire` - Eire
        * `Etc/GMT` - Etc/GMT
        * `Etc/GMT+0` - Etc/GMT+0
        * `Etc/GMT+1` - Etc/GMT+1
        * `Etc/GMT+10` - Etc/GMT+10
        * `Etc/GMT+11` - Etc/GMT+11
        * `Etc/GMT+12` - Etc/GMT+12
        * `Etc/GMT+2` - Etc/GMT+2
        * `Etc/GMT+3` - Etc/GMT+3
        * `Etc/GMT+4` - Etc/GMT+4
        * `Etc/GMT+5` - Etc/GMT+5
        * `Etc/GMT+6` - Etc/GMT+6
        * `Etc/GMT+7` - Etc/GMT+7
        * `Etc/GMT+8` - Etc/GMT+8
        * `Etc/GMT+9` - Etc/GMT+9
        * `Etc/GMT-0` - Etc/GMT-0
        * `Etc/GMT-1` - Etc/GMT-1
        * `Etc/GMT-10` - Etc/GMT-10
        * `Etc/GMT-11` - Etc/GMT-11
        * `Etc/GMT-12` - Etc/GMT-12
        * `Etc/GMT-13` - Etc/GMT-13
        * `Etc/GMT-14` - Etc/GMT-14
        * `Etc/GMT-2` - Etc/GMT-2
        * `Etc/GMT-3` - Etc/GMT-3
        * `Etc/GMT-4` - Etc/GMT-4
        * `Etc/GMT-5` - Etc/GMT-5
        * `Etc/GMT-6` - Etc/GMT-6
        * `Etc/GMT-7` - Etc/GMT-7
        * `Etc/GMT-8` - Etc/GMT-8
        * `Etc/GMT-9` - Etc/GMT-9
        * `Etc/GMT0` - Etc/GMT0
        * `Etc/Greenwich` - Etc/Greenwich
        * `Etc/UCT` - Etc/UCT
        * `Etc/UTC` - Etc/UTC
        * `Etc/Universal` - Etc/Universal
        * `Etc/Zulu` - Etc/Zulu
        * `Europe/Amsterdam` - Europe/Amsterdam
        * `Europe/Andorra` - Europe/Andorra
        * `Europe/Astrakhan` - Europe/Astrakhan
        * `Europe/Athens` - Europe/Athens
        * `Europe/Belfast` - Europe/Belfast
        * `Europe/Belgrade` - Europe/Belgrade
        * `Europe/Berlin` - Europe/Berlin
        * `Europe/Bratislava` - Europe/Bratislava
        * `Europe/Brussels` - Europe/Brussels
        * `Europe/Bucharest` - Europe/Bucharest
        * `Europe/Budapest` - Europe/Budapest
        * `Europe/Busingen` - Europe/Busingen
        * `Europe/Chisinau` - Europe/Chisinau
        * `Europe/Copenhagen` - Europe/Copenhagen
        * `Europe/Dublin` - Europe/Dublin
        * `Europe/Gibraltar` - Europe/Gibraltar
        * `Europe/Guernsey` - Europe/Guernsey
        * `Europe/Helsinki` - Europe/Helsinki
        * `Europe/Isle_of_Man` - Europe/Isle_of_Man
        * `Europe/Istanbul` - Europe/Istanbul
        * `Europe/Jersey` - Europe/Jersey
        * `Europe/Kaliningrad` - Europe/Kaliningrad
        * `Europe/Kiev` - Europe/Kiev
        * `Europe/Kirov` - Europe/Kirov
        * `Europe/Kyiv` - Europe/Kyiv
        * `Europe/Lisbon` - Europe/Lisbon
        * `Europe/Ljubljana` - Europe/Ljubljana
        * `Europe/London` - Europe/London
        * `Europe/Luxembourg` - Europe/Luxembourg
        * `Europe/Madrid` - Europe/Madrid
        * `Europe/Malta` - Europe/Malta
        * `Europe/Mariehamn` - Europe/Mariehamn
        * `Europe/Minsk` - Europe/Minsk
        * `Europe/Monaco` - Europe/Monaco
        * `Europe/Moscow` - Europe/Moscow
        * `Europe/Nicosia` - Europe/Nicosia
        * `Europe/Oslo` - Europe/Oslo
        * `Europe/Paris` - Europe/Paris
        * `Europe/Podgorica` - Europe/Podgorica
        * `Europe/Prague` - Europe/Prague
        * `Europe/Riga` - Europe/Riga
        * `Europe/Rome` - Europe/Rome
        * `Europe/Samara` - Europe/Samara
        * `Europe/San_Marino` - Europe/San_Marino
        * `Europe/Sarajevo` - Europe/Sarajevo
        * `Europe/Saratov` - Europe/Saratov
        * `Europe/Simferopol` - Europe/Simferopol
        * `Europe/Skopje` - Europe/Skopje
        * `Europe/Sofia` - Europe/Sofia
        * `Europe/Stockholm` - Europe/Stockholm
        * `Europe/Tallinn` - Europe/Tallinn
        * `Europe/Tirane` - Europe/Tirane
        * `Europe/Tiraspol` - Europe/Tiraspol
        * `Europe/Ulyanovsk` - Europe/Ulyanovsk
        * `Europe/Uzhgorod` - Europe/Uzhgorod
        * `Europe/Vaduz` - Europe/Vaduz
        * `Europe/Vatican` - Europe/Vatican
        * `Europe/Vienna` - Europe/Vienna
        * `Europe/Vilnius` - Europe/Vilnius
        * `Europe/Volgograd` - Europe/Volgograd
        * `Europe/Warsaw` - Europe/Warsaw
        * `Europe/Zagreb` - Europe/Zagreb
        * `Europe/Zaporozhye` - Europe/Zaporozhye
        * `Europe/Zurich` - Europe/Zurich
        * `Factory` - Factory
        * `GB` - GB
        * `GB-Eire` - GB-Eire
        * `GMT` - GMT
        * `GMT+0` - GMT+0
        * `GMT-0` - GMT-0
        * `GMT0` - GMT0
        * `Greenwich` - Greenwich
        * `HST` - HST
        * `Hongkong` - Hongkong
        * `Iceland` - Iceland
        * `Indian/Antananarivo` - Indian/Antananarivo
        * `Indian/Chagos` - Indian/Chagos
        * `Indian/Christmas` - Indian/Christmas
        * `Indian/Cocos` - Indian/Cocos
        * `Indian/Comoro` - Indian/Comoro
        * `Indian/Kerguelen` - Indian/Kerguelen
        * `Indian/Mahe` - Indian/Mahe
        * `Indian/Maldives` - Indian/Maldives
        * `Indian/Mauritius` - Indian/Mauritius
        * `Indian/Mayotte` - Indian/Mayotte
        * `Indian/Reunion` - Indian/Reunion
        * `Iran` - Iran
        * `Israel` - Israel
        * `Jamaica` - Jamaica
        * `Japan` - Japan
        * `Kwajalein` - Kwajalein
        * `Libya` - Libya
        * `MET` - MET
        * `MST` - MST
        * `MST7MDT` - MST7MDT
        * `Mexico/BajaNorte` - Mexico/BajaNorte
        * `Mexico/BajaSur` - Mexico/BajaSur
        * `Mexico/General` - Mexico/General
        * `NZ` - NZ
        * `NZ-CHAT` - NZ-CHAT
        * `Navajo` - Navajo
        * `PRC` - PRC
        * `PST8PDT` - PST8PDT
        * `Pacific/Apia` - Pacific/Apia
        * `Pacific/Auckland` - Pacific/Auckland
        * `Pacific/Bougainville` - Pacific/Bougainville
        * `Pacific/Chatham` - Pacific/Chatham
        * `Pacific/Chuuk` - Pacific/Chuuk
        * `Pacific/Easter` - Pacific/Easter
        * `Pacific/Efate` - Pacific/Efate
        * `Pacific/Enderbury` - Pacific/Enderbury
        * `Pacific/Fakaofo` - Pacific/Fakaofo
        * `Pacific/Fiji` - Pacific/Fiji
        * `Pacific/Funafuti` - Pacific/Funafuti
        * `Pacific/Galapagos` - Pacific/Galapagos
        * `Pacific/Gambier` - Pacific/Gambier
        * `Pacific/Guadalcanal` - Pacific/Guadalcanal
        * `Pacific/Guam` - Pacific/Guam
        * `Pacific/Honolulu` - Pacific/Honolulu
        * `Pacific/Johnston` - Pacific/Johnston
        * `Pacific/Kanton` - Pacific/Kanton
        * `Pacific/Kiritimati` - Pacific/Kiritimati
        * `Pacific/Kosrae` - Pacific/Kosrae
        * `Pacific/Kwajalein` - Pacific/Kwajalein
        * `Pacific/Majuro` - Pacific/Majuro
        * `Pacific/Marquesas` - Pacific/Marquesas
        * `Pacific/Midway` - Pacific/Midway
        * `Pacific/Nauru` - Pacific/Nauru
        * `Pacific/Niue` - Pacific/Niue
        * `Pacific/Norfolk` - Pacific/Norfolk
        * `Pacific/Noumea` - Pacific/Noumea
        * `Pacific/Pago_Pago` - Pacific/Pago_Pago
        * `Pacific/Palau` - Pacific/Palau
        * `Pacific/Pitcairn` - Pacific/Pitcairn
        * `Pacific/Pohnpei` - Pacific/Pohnpei
        * `Pacific/Ponape` - Pacific/Ponape
        * `Pacific/Port_Moresby` - Pacific/Port_Moresby
        * `Pacific/Rarotonga` - Pacific/Rarotonga
        * `Pacific/Saipan` - Pacific/Saipan
        * `Pacific/Samoa` - Pacific/Samoa
        * `Pacific/Tahiti` - Pacific/Tahiti
        * `Pacific/Tarawa` - Pacific/Tarawa
        * `Pacific/Tongatapu` - Pacific/Tongatapu
        * `Pacific/Truk` - Pacific/Truk
        * `Pacific/Wake` - Pacific/Wake
        * `Pacific/Wallis` - Pacific/Wallis
        * `Pacific/Yap` - Pacific/Yap
        * `Poland` - Poland
        * `Portugal` - Portugal
        * `ROC` - ROC
        * `ROK` - ROK
        * `Singapore` - Singapore
        * `Turkey` - Turkey
        * `UCT` - UCT
        * `US/Alaska` - US/Alaska
        * `US/Aleutian` - US/Aleutian
        * `US/Arizona` - US/Arizona
        * `US/Central` - US/Central
        * `US/East-Indiana` - US/East-Indiana
        * `US/Eastern` - US/Eastern
        * `US/Hawaii` - US/Hawaii
        * `US/Indiana-Starke` - US/Indiana-Starke
        * `US/Michigan` - US/Michigan
        * `US/Mountain` - US/Mountain
        * `US/Pacific` - US/Pacific
        * `US/Samoa` - US/Samoa
        * `UTC` - UTC
        * `Universal` - Universal
        * `W-SU` - W-SU
        * `WET` - WET
        * `Zulu` - Zulu
        * `localtime` - localtime
    TypeEnum:
      enum:
      - markdown
      - html
      - plaintext
      type: string
      description: |-
        * `markdown` - Markdown
        * `html` - Html
        * `plaintext` - Plain Text
  securitySchemes:
    API Key Auth:
      type: apiKey
      in: header
      name: X-API-KEY
